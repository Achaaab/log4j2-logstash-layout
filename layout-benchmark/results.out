[INFO] Scanning for projects...
[INFO] 
[INFO] --------------< com.vlkan.log4j2:log4j2-logstash-layout >---------------
[INFO] Building log4j2-logstash-layout 0.18-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- exec-maven-plugin:1.6.0:java (default-cli) @ log4j2-logstash-layout ---
# JMH version: 1.21
# VM version: JDK 12, OpenJDK 64-Bit Server VM, 12+33
# VM invoker: /home/vy/Software/share/java/jdk/12+33/bin/java
# VM options: -XX:+TieredCompilation -XX:+AggressiveOpts -Dclassworlds.conf=/home/vy/Software/share/java/maven/latest/bin/m2.conf -Dmaven.home=/home/vy/Software/share/java/maven/latest -Dlibrary.jansi.path=/home/vy/Software/share/java/maven/latest/lib/jansi-native -Dmaven.multiModuleProjectDirectory=/home/vy/Projects/log4j2-logstash-layout
# Warmup: 3 iterations, 20 s each
# Measurement: 3 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullCustomJsonLayout

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Ignoring option AggressiveOpts; support was removed in 12.0
# Warmup Iteration   1: 11.566 ops/s
# Warmup Iteration   2: 12.980 ops/s
# Warmup Iteration   3: 12.155 ops/s
Iteration   1: 12.312 ops/s
                 ·gc.alloc.rate:                1130.648 MB/sec
                 ·gc.alloc.rate.norm:           97900611.870 B/op
                 ·gc.churn.Eden_Space:          1141.526 MB/sec
                 ·gc.churn.Eden_Space.norm:     98842505.903 B/op
                 ·gc.churn.Survivor_Space:      0.084 MB/sec
                 ·gc.churn.Survivor_Space.norm: 7236.346 B/op
                 ·gc.count:                     523.000 counts
                 ·gc.time:                      146.000 ms
                 ·stack:                        <delayed till summary>

Iteration   2: 12.622 ops/s
                 ·gc.alloc.rate:                1159.122 MB/sec
                 ·gc.alloc.rate.norm:           97896856.633 B/op
                 ·gc.churn.Eden_Space:          1168.741 MB/sec
                 ·gc.churn.Eden_Space.norm:     98709279.515 B/op
                 ·gc.churn.Survivor_Space:      0.084 MB/sec
                 ·gc.churn.Survivor_Space.norm: 7063.916 B/op
                 ·gc.count:                     535.000 counts
                 ·gc.time:                      144.000 ms
                 ·stack:                        <delayed till summary>

Iteration   3: 12.783 ops/s
                 ·gc.alloc.rate:                1173.862 MB/sec
                 ·gc.alloc.rate.norm:           97894596.083 B/op
                 ·gc.churn.Eden_Space:          1185.686 MB/sec
                 ·gc.churn.Eden_Space.norm:     98880693.167 B/op
                 ·gc.churn.Survivor_Space:      0.089 MB/sec
                 ·gc.churn.Survivor_Space.norm: 7393.583 B/op
                 ·gc.count:                     543.000 counts
                 ·gc.time:                      145.000 ms
                 ·stack:                        <delayed till summary>


# Run progress: 8.33% complete, ETA 00:28:25
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Ignoring option AggressiveOpts; support was removed in 12.0
# Warmup Iteration   1: 10.489 ops/s
# Warmup Iteration   2: 12.747 ops/s
# Warmup Iteration   3: 12.743 ops/s
Iteration   1: 12.231 ops/s
                 ·gc.alloc.rate:                1123.139 MB/sec
                 ·gc.alloc.rate.norm:           97901041.243 B/op
                 ·gc.churn.Eden_Space:          1134.465 MB/sec
                 ·gc.churn.Eden_Space.norm:     98888327.913 B/op
                 ·gc.churn.Survivor_Space:      0.082 MB/sec
                 ·gc.churn.Survivor_Space.norm: 7123.357 B/op
                 ·gc.count:                     519.000 counts
                 ·gc.time:                      141.000 ms
                 ·stack:                        <delayed till summary>

Iteration   2: 11.800 ops/s
                 ·gc.alloc.rate:                1083.696 MB/sec
                 ·gc.alloc.rate.norm:           97907533.431 B/op
                 ·gc.churn.Eden_Space:          1094.486 MB/sec
                 ·gc.churn.Eden_Space.norm:     98882380.823 B/op
                 ·gc.churn.Survivor_Space:      0.078 MB/sec
                 ·gc.churn.Survivor_Space.norm: 7016.406 B/op
                 ·gc.count:                     502.000 counts
                 ·gc.time:                      140.000 ms
                 ·stack:                        <delayed till summary>

Iteration   3: 12.642 ops/s
                 ·gc.alloc.rate:                1160.887 MB/sec
                 ·gc.alloc.rate.norm:           97895876.421 B/op
                 ·gc.churn.Eden_Space:          1171.817 MB/sec
                 ·gc.churn.Eden_Space.norm:     98817576.926 B/op
                 ·gc.churn.Survivor_Space:      0.085 MB/sec
                 ·gc.churn.Survivor_Space.norm: 7190.316 B/op
                 ·gc.count:                     537.000 counts
                 ·gc.time:                      143.000 ms
                 ·stack:                        <delayed till summary>



Result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullCustomJsonLayout":
  12.398 ±(99.9%) 1.012 ops/s [Average]
  (min, avg, max) = (11.800, 12.398, 12.783), stdev = 0.361
  CI (99.9%): [11.386, 13.411] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullCustomJsonLayout:·gc.alloc.rate":
  1138.559 ±(99.9%) 92.818 MB/sec [Average]
  (min, avg, max) = (1083.696, 1138.559, 1173.862), stdev = 33.100
  CI (99.9%): [1045.740, 1231.377] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullCustomJsonLayout:·gc.alloc.rate.norm":
  97899419.280 ±(99.9%) 13288.101 B/op [Average]
  (min, avg, max) = (97894596.083, 97899419.280, 97907533.431), stdev = 4738.665
  CI (99.9%): [97886131.180, 97912707.381] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullCustomJsonLayout:·gc.churn.Eden_Space":
  1149.453 ±(99.9%) 92.953 MB/sec [Average]
  (min, avg, max) = (1094.486, 1149.453, 1185.686), stdev = 33.148
  CI (99.9%): [1056.501, 1242.406] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullCustomJsonLayout:·gc.churn.Eden_Space.norm":
  98836794.041 ±(99.9%) 191519.611 B/op [Average]
  (min, avg, max) = (98709279.515, 98836794.041, 98888327.913), stdev = 68297.738
  CI (99.9%): [98645274.430, 99028313.652] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullCustomJsonLayout:·gc.churn.Survivor_Space":
  0.083 ±(99.9%) 0.010 MB/sec [Average]
  (min, avg, max) = (0.078, 0.083, 0.089), stdev = 0.004
  CI (99.9%): [0.073, 0.094] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullCustomJsonLayout:·gc.churn.Survivor_Space.norm":
  7170.654 ±(99.9%) 380.011 B/op [Average]
  (min, avg, max) = (7016.406, 7170.654, 7393.583), stdev = 135.515
  CI (99.9%): [6790.643, 7550.664] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullCustomJsonLayout:·gc.count":
  3159.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (502.000, 526.500, 543.000), stdev = 14.990
  CI (99.9%): [3159.000, 3159.000] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullCustomJsonLayout:·gc.time":
  859.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (140.000, 143.167, 146.000), stdev = 2.317
  CI (99.9%): [859.000, 859.000] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullCustomJsonLayout:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
 50.0%         TIMED_WAITING
 49.0%         RUNNABLE
  1.0%         WAITING

....[Thread state: TIMED_WAITING]...................................................................
 50.0% 100.0% java.lang.Object.wait

....[Thread state: RUNNABLE]........................................................................
 17.9%  36.5% com.fasterxml.jackson.databind.ser.std.StringSerializer.serialize
  7.3%  14.9% jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  6.0%  12.3% com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField
  5.4%  11.0% com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer
  3.2%   6.6% com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName
  2.3%   4.7% org.apache.logging.log4j.core.layout.AbstractLayout.encode
  1.4%   2.8% com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw
  1.2%   2.4% com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close
  1.0%   2.1% com.fasterxml.jackson.databind.ser.std.BooleanSerializer.serialize
  0.9%   1.8% com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer.serializeContents
  2.4%   4.8% <other>

....[Thread state: WAITING].........................................................................
  1.0% 100.0% jdk.internal.misc.Unsafe.park



# JMH version: 1.21
# VM version: JDK 12, OpenJDK 64-Bit Server VM, 12+33
# VM invoker: /home/vy/Software/share/java/jdk/12+33/bin/java
# VM options: -XX:+TieredCompilation -XX:+AggressiveOpts -Dclassworlds.conf=/home/vy/Software/share/java/maven/latest/bin/m2.conf -Dmaven.home=/home/vy/Software/share/java/maven/latest -Dlibrary.jansi.path=/home/vy/Software/share/java/maven/latest/lib/jansi-native -Dmaven.multiModuleProjectDirectory=/home/vy/Projects/log4j2-logstash-layout
# Warmup: 3 iterations, 20 s each
# Measurement: 3 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullDefaultJsonLayout

# Run progress: 16.67% complete, ETA 00:25:50
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Ignoring option AggressiveOpts; support was removed in 12.0
# Warmup Iteration   1: 12.009 ops/s
# Warmup Iteration   2: 13.542 ops/s
# Warmup Iteration   3: 13.478 ops/s
Iteration   1: 13.469 ops/s
                 ·gc.alloc.rate:                1235.401 MB/sec
                 ·gc.alloc.rate.norm:           97776939.654 B/op
                 ·gc.churn.Eden_Space:          1247.826 MB/sec
                 ·gc.churn.Eden_Space.norm:     98760329.126 B/op
                 ·gc.churn.Survivor_Space:      0.074 MB/sec
                 ·gc.churn.Survivor_Space.norm: 5849.422 B/op
                 ·gc.count:                     572.000 counts
                 ·gc.time:                      150.000 ms
                 ·stack:                        <delayed till summary>

Iteration   2: 13.781 ops/s
                 ·gc.alloc.rate:                1263.817 MB/sec
                 ·gc.alloc.rate.norm:           97773726.628 B/op
                 ·gc.churn.Eden_Space:          1275.018 MB/sec
                 ·gc.churn.Eden_Space.norm:     98640293.121 B/op
                 ·gc.churn.Survivor_Space:      0.080 MB/sec
                 ·gc.churn.Survivor_Space.norm: 6204.715 B/op
                 ·gc.count:                     584.000 counts
                 ·gc.time:                      147.000 ms
                 ·stack:                        <delayed till summary>

Iteration   3: 13.664 ops/s
                 ·gc.alloc.rate:                1253.124 MB/sec
                 ·gc.alloc.rate.norm:           97774656.934 B/op
                 ·gc.churn.Eden_Space:          1266.902 MB/sec
                 ·gc.churn.Eden_Space.norm:     98849730.394 B/op
                 ·gc.churn.Survivor_Space:      0.076 MB/sec
                 ·gc.churn.Survivor_Space.norm: 5891.815 B/op
                 ·gc.count:                     581.000 counts
                 ·gc.time:                      150.000 ms
                 ·stack:                        <delayed till summary>


# Run progress: 25.00% complete, ETA 00:23:14
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Ignoring option AggressiveOpts; support was removed in 12.0
# Warmup Iteration   1: 11.642 ops/s
# Warmup Iteration   2: 13.119 ops/s
# Warmup Iteration   3: 12.821 ops/s
Iteration   1: 12.736 ops/s
                 ·gc.alloc.rate:                1168.144 MB/sec
                 ·gc.alloc.rate.norm:           97784393.483 B/op
                 ·gc.churn.Eden_Space:          1179.956 MB/sec
                 ·gc.churn.Eden_Space.norm:     98773174.204 B/op
                 ·gc.churn.Survivor_Space:      0.078 MB/sec
                 ·gc.churn.Survivor_Space.norm: 6519.770 B/op
                 ·gc.count:                     541.000 counts
                 ·gc.time:                      143.000 ms
                 ·stack:                        <delayed till summary>

Iteration   2: 13.126 ops/s
                 ·gc.alloc.rate:                1203.838 MB/sec
                 ·gc.alloc.rate.norm:           97779456.223 B/op
                 ·gc.churn.Eden_Space:          1214.897 MB/sec
                 ·gc.churn.Eden_Space.norm:     98677708.589 B/op
                 ·gc.churn.Survivor_Space:      0.076 MB/sec
                 ·gc.churn.Survivor_Space.norm: 6138.944 B/op
                 ·gc.count:                     556.000 counts
                 ·gc.time:                      144.000 ms
                 ·stack:                        <delayed till summary>

Iteration   3: 13.115 ops/s
                 ·gc.alloc.rate:                1202.918 MB/sec
                 ·gc.alloc.rate.norm:           97780279.249 B/op
                 ·gc.churn.Eden_Space:          1216.148 MB/sec
                 ·gc.churn.Eden_Space.norm:     98855657.198 B/op
                 ·gc.churn.Survivor_Space:      0.075 MB/sec
                 ·gc.churn.Survivor_Space.norm: 6097.929 B/op
                 ·gc.count:                     557.000 counts
                 ·gc.time:                      145.000 ms
                 ·stack:                        <delayed till summary>



Result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullDefaultJsonLayout":
  13.315 ±(99.9%) 1.103 ops/s [Average]
  (min, avg, max) = (12.736, 13.315, 13.781), stdev = 0.393
  CI (99.9%): [12.212, 14.418] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullDefaultJsonLayout:·gc.alloc.rate":
  1221.207 ±(99.9%) 101.010 MB/sec [Average]
  (min, avg, max) = (1168.144, 1221.207, 1263.817), stdev = 36.021
  CI (99.9%): [1120.197, 1322.217] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullDefaultJsonLayout:·gc.alloc.rate.norm":
  97778242.029 ±(99.9%) 11104.215 B/op [Average]
  (min, avg, max) = (97773726.628, 97778242.029, 97784393.483), stdev = 3959.870
  CI (99.9%): [97767137.814, 97789346.243] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullDefaultJsonLayout:·gc.churn.Eden_Space":
  1233.458 ±(99.9%) 101.562 MB/sec [Average]
  (min, avg, max) = (1179.956, 1233.458, 1275.018), stdev = 36.218
  CI (99.9%): [1131.896, 1335.020] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullDefaultJsonLayout:·gc.churn.Eden_Space.norm":
  98759482.105 ±(99.9%) 245988.129 B/op [Average]
  (min, avg, max) = (98640293.121, 98759482.105, 98855657.198), stdev = 87721.736
  CI (99.9%): [98513493.976, 99005470.234] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullDefaultJsonLayout:·gc.churn.Survivor_Space":
  0.076 ±(99.9%) 0.006 MB/sec [Average]
  (min, avg, max) = (0.074, 0.076, 0.080), stdev = 0.002
  CI (99.9%): [0.070, 0.083] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullDefaultJsonLayout:·gc.churn.Survivor_Space.norm":
  6117.099 ±(99.9%) 678.902 B/op [Average]
  (min, avg, max) = (5849.422, 6117.099, 6519.770), stdev = 242.103
  CI (99.9%): [5438.198, 6796.001] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullDefaultJsonLayout:·gc.count":
  3391.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (541.000, 565.167, 584.000), stdev = 16.654
  CI (99.9%): [3391.000, 3391.000] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullDefaultJsonLayout:·gc.time":
  879.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (143.000, 146.500, 150.000), stdev = 3.017
  CI (99.9%): [879.000, 879.000] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullDefaultJsonLayout:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
 50.0%         TIMED_WAITING
 49.0%         RUNNABLE
  1.0%         WAITING

....[Thread state: TIMED_WAITING]...................................................................
 50.0% 100.0% java.lang.Object.wait

....[Thread state: RUNNABLE]........................................................................
 17.4%  35.5% com.fasterxml.jackson.databind.ser.std.StringSerializer.serialize
  7.8%  16.0% jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  6.9%  14.1% com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer
  6.7%  13.6% com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField
  3.0%   6.0% com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw
  2.6%   5.2% org.apache.logging.log4j.core.layout.AbstractLayout.encode
  1.3%   2.6% com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close
  0.8%   1.7% com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer.serializeContents
  0.7%   1.4% java.util.Arrays.copyOf
  0.4%   0.9% com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeArrayValueSeparator
  1.5%   3.0% <other>

....[Thread state: WAITING].........................................................................
  1.0% 100.0% jdk.internal.misc.Unsafe.park



# JMH version: 1.21
# VM version: JDK 12, OpenJDK 64-Bit Server VM, 12+33
# VM invoker: /home/vy/Software/share/java/jdk/12+33/bin/java
# VM options: -XX:+TieredCompilation -XX:+AggressiveOpts -Dclassworlds.conf=/home/vy/Software/share/java/maven/latest/bin/m2.conf -Dmaven.home=/home/vy/Software/share/java/maven/latest -Dlibrary.jansi.path=/home/vy/Software/share/java/maven/latest/lib/jansi-native -Dmaven.multiModuleProjectDirectory=/home/vy/Projects/log4j2-logstash-layout
# Warmup: 3 iterations, 20 s each
# Measurement: 3 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullLogstashLayout

# Run progress: 33.33% complete, ETA 00:20:39
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Ignoring option AggressiveOpts; support was removed in 12.0
# Warmup Iteration   1: 58.948 ops/s
# Warmup Iteration   2: 61.241 ops/s
# Warmup Iteration   3: 59.552 ops/s
Iteration   1: 60.229 ops/s
                 ·gc.alloc.rate:            7.528 MB/sec
                 ·gc.alloc.rate.norm:       133251.553 B/op
                 ·gc.churn.Eden_Space:      6.555 MB/sec
                 ·gc.churn.Eden_Space.norm: 116029.168 B/op
                 ·gc.count:                 3.000 counts
                 ·gc.time:                  7.000 ms
                 ·stack:                    <delayed till summary>

Iteration   2: 61.397 ops/s
                 ·gc.alloc.rate:                7.641 MB/sec
                 ·gc.alloc.rate.norm:           132698.787 B/op
                 ·gc.churn.Eden_Space:          8.739 MB/sec
                 ·gc.churn.Eden_Space.norm:     151767.579 B/op
                 ·gc.churn.Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.Survivor_Space.norm: 0.747 B/op
                 ·gc.count:                     4.000 counts
                 ·gc.time:                      9.000 ms
                 ·stack:                        <delayed till summary>

Iteration   3: 61.630 ops/s
                 ·gc.alloc.rate:                7.667 MB/sec
                 ·gc.alloc.rate.norm:           132631.918 B/op
                 ·gc.churn.Eden_Space:          6.555 MB/sec
                 ·gc.churn.Eden_Space.norm:     113394.992 B/op
                 ·gc.churn.Survivor_Space:      0.077 MB/sec
                 ·gc.churn.Survivor_Space.norm: 1328.930 B/op
                 ·gc.count:                     3.000 counts
                 ·gc.time:                      6.000 ms
                 ·stack:                        <delayed till summary>


# Run progress: 41.67% complete, ETA 00:18:04
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Ignoring option AggressiveOpts; support was removed in 12.0
# Warmup Iteration   1: 57.645 ops/s
# Warmup Iteration   2: 60.712 ops/s
# Warmup Iteration   3: 58.004 ops/s
Iteration   1: 60.149 ops/s
                 ·gc.alloc.rate:            7.521 MB/sec
                 ·gc.alloc.rate.norm:       133303.535 B/op
                 ·gc.churn.Eden_Space:      6.557 MB/sec
                 ·gc.churn.Eden_Space.norm: 116222.014 B/op
                 ·gc.count:                 3.000 counts
                 ·gc.time:                  7.000 ms
                 ·stack:                    <delayed till summary>

Iteration   2: 59.691 ops/s
                 ·gc.alloc.rate:            7.482 MB/sec
                 ·gc.alloc.rate.norm:       133638.196 B/op
                 ·gc.churn.Eden_Space:      6.554 MB/sec
                 ·gc.churn.Eden_Space.norm: 117065.143 B/op
                 ·gc.count:                 3.000 counts
                 ·gc.time:                  6.000 ms
                 ·stack:                    <delayed till summary>

Iteration   3: 60.398 ops/s
                 ·gc.alloc.rate:                7.549 MB/sec
                 ·gc.alloc.rate.norm:           133240.022 B/op
                 ·gc.churn.Eden_Space:          8.741 MB/sec
                 ·gc.churn.Eden_Space.norm:     154278.901 B/op
                 ·gc.churn.Survivor_Space:      0.077 MB/sec
                 ·gc.churn.Survivor_Space.norm: 1359.713 B/op
                 ·gc.count:                     4.000 counts
                 ·gc.time:                      9.000 ms
                 ·stack:                        <delayed till summary>



Result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullLogstashLayout":
  60.582 ±(99.9%) 2.136 ops/s [Average]
  (min, avg, max) = (59.691, 60.582, 61.630), stdev = 0.762
  CI (99.9%): [58.446, 62.719] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullLogstashLayout:·gc.alloc.rate":
  7.565 ±(99.9%) 0.205 MB/sec [Average]
  (min, avg, max) = (7.482, 7.565, 7.667), stdev = 0.073
  CI (99.9%): [7.359, 7.770] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullLogstashLayout:·gc.alloc.rate.norm":
  133127.335 ±(99.9%) 1085.511 B/op [Average]
  (min, avg, max) = (132631.918, 133127.335, 133638.196), stdev = 387.104
  CI (99.9%): [132041.824, 134212.846] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullLogstashLayout:·gc.churn.Eden_Space":
  7.284 ±(99.9%) 3.163 MB/sec [Average]
  (min, avg, max) = (6.554, 7.284, 8.741), stdev = 1.128
  CI (99.9%): [4.120, 10.447] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullLogstashLayout:·gc.churn.Eden_Space.norm":
  128126.300 ±(99.9%) 54234.477 B/op [Average]
  (min, avg, max) = (113394.992, 128126.300, 154278.901), stdev = 19340.537
  CI (99.9%): [73891.823, 182360.777] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullLogstashLayout:·gc.churn.Survivor_Space":
  0.026 ±(99.9%) 0.111 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.026, 0.077), stdev = 0.040
  CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullLogstashLayout:·gc.churn.Survivor_Space.norm":
  448.232 ±(99.9%) 1946.601 B/op [Average]
  (min, avg, max) = (≈ 0, 448.232, 1359.713), stdev = 694.177
  CI (99.9%): [≈ 0, 2394.832] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullLogstashLayout:·gc.count":
  20.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (3.000, 3.333, 4.000), stdev = 0.516
  CI (99.9%): [20.000, 20.000] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullLogstashLayout:·gc.time":
  44.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (6.000, 7.333, 9.000), stdev = 1.366
  CI (99.9%): [44.000, 44.000] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.fullLogstashLayout:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
 50.0%         TIMED_WAITING
 49.1%         RUNNABLE
  0.9%         WAITING

....[Thread state: TIMED_WAITING]...................................................................
 50.0% 100.0% java.lang.Object.wait

....[Thread state: RUNNABLE]........................................................................
 22.4%  45.7% com.vlkan.log4j2.logstash.layout.resolver.StackTraceElementObjectResolver.resolve
  9.6%  19.6% com.fasterxml.jackson.core.filter.TokenFilterContext._writePath
  6.8%  13.8% com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeString
  3.2%   6.6% com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeNumber
  1.7%   3.5% com.fasterxml.jackson.core.filter.TokenFilterContext.writePath
  0.7%   1.5% com.vlkan.log4j2.logstash.layout.resolver.TemplateResolvers$6.resolve
  0.6%   1.2% com.vlkan.log4j2.logstash.layout.resolver.StackTraceElementObjectResolver$4.resolve
  0.5%   1.0% com.vlkan.log4j2.logstash.layout.resolver.StackTraceObjectResolver.resolve
  0.4%   0.9% com.vlkan.log4j2.logstash.layout.resolver.ContextStackResolver.resolve
  0.3%   0.6% com.vlkan.log4j2.logstash.layout.LogstashLayout.encode
  2.8%   5.6% <other>

....[Thread state: WAITING].........................................................................
  0.9% 100.0% jdk.internal.misc.Unsafe.park



# JMH version: 1.21
# VM version: JDK 12, OpenJDK 64-Bit Server VM, 12+33
# VM invoker: /home/vy/Software/share/java/jdk/12+33/bin/java
# VM options: -XX:+TieredCompilation -XX:+AggressiveOpts -Dclassworlds.conf=/home/vy/Software/share/java/maven/latest/bin/m2.conf -Dmaven.home=/home/vy/Software/share/java/maven/latest -Dlibrary.jansi.path=/home/vy/Software/share/java/maven/latest/lib/jansi-native -Dmaven.multiModuleProjectDirectory=/home/vy/Projects/log4j2-logstash-layout
# Warmup: 3 iterations, 20 s each
# Measurement: 3 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteCustomJsonLayout

# Run progress: 50.00% complete, ETA 00:15:29
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Ignoring option AggressiveOpts; support was removed in 12.0
# Warmup Iteration   1: 423.992 ops/s
# Warmup Iteration   2: 456.891 ops/s
# Warmup Iteration   3: 449.984 ops/s
Iteration   1: 462.153 ops/s
                 ·gc.alloc.rate:                1152.587 MB/sec
                 ·gc.alloc.rate.norm:           2658746.205 B/op
                 ·gc.churn.Eden_Space:          1154.147 MB/sec
                 ·gc.churn.Eden_Space.norm:     2662345.363 B/op
                 ·gc.churn.Survivor_Space:      0.003 MB/sec
                 ·gc.churn.Survivor_Space.norm: 7.398 B/op
                 ·gc.count:                     528.000 counts
                 ·gc.time:                      111.000 ms
                 ·stack:                        <delayed till summary>

Iteration   2: 457.429 ops/s
                 ·gc.alloc.rate:                1140.781 MB/sec
                 ·gc.alloc.rate.norm:           2658813.702 B/op
                 ·gc.churn.Eden_Space:          1143.101 MB/sec
                 ·gc.churn.Eden_Space.norm:     2664221.544 B/op
                 ·gc.churn.Survivor_Space:      0.003 MB/sec
                 ·gc.churn.Survivor_Space.norm: 6.991 B/op
                 ·gc.count:                     523.000 counts
                 ·gc.time:                      111.000 ms
                 ·stack:                        <delayed till summary>

Iteration   3: 464.666 ops/s
                 ·gc.alloc.rate:                1158.833 MB/sec
                 ·gc.alloc.rate.norm:           2658756.660 B/op
                 ·gc.churn.Eden_Space:          1160.713 MB/sec
                 ·gc.churn.Eden_Space.norm:     2663070.152 B/op
                 ·gc.churn.Survivor_Space:      0.003 MB/sec
                 ·gc.churn.Survivor_Space.norm: 7.088 B/op
                 ·gc.count:                     531.000 counts
                 ·gc.time:                      111.000 ms
                 ·stack:                        <delayed till summary>


# Run progress: 58.33% complete, ETA 00:12:54
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Ignoring option AggressiveOpts; support was removed in 12.0
# Warmup Iteration   1: 405.486 ops/s
# Warmup Iteration   2: 432.634 ops/s
# Warmup Iteration   3: 451.169 ops/s
Iteration   1: 456.097 ops/s
                 ·gc.alloc.rate:                1151.194 MB/sec
                 ·gc.alloc.rate.norm:           2690800.566 B/op
                 ·gc.churn.Eden_Space:          1154.083 MB/sec
                 ·gc.churn.Eden_Space.norm:     2697552.982 B/op
                 ·gc.churn.Survivor_Space:      0.004 MB/sec
                 ·gc.churn.Survivor_Space.norm: 9.098 B/op
                 ·gc.count:                     528.000 counts
                 ·gc.time:                      114.000 ms
                 ·stack:                        <delayed till summary>

Iteration   2: 476.307 ops/s
                 ·gc.alloc.rate:                1201.996 MB/sec
                 ·gc.alloc.rate.norm:           2690646.410 B/op
                 ·gc.churn.Eden_Space:          1204.257 MB/sec
                 ·gc.churn.Eden_Space.norm:     2695705.981 B/op
                 ·gc.churn.Survivor_Space:      0.004 MB/sec
                 ·gc.churn.Survivor_Space.norm: 9.569 B/op
                 ·gc.count:                     551.000 counts
                 ·gc.time:                      117.000 ms
                 ·stack:                        <delayed till summary>

Iteration   3: 471.990 ops/s
                 ·gc.alloc.rate:                1191.247 MB/sec
                 ·gc.alloc.rate.norm:           2690667.431 B/op
                 ·gc.churn.Eden_Space:          1193.418 MB/sec
                 ·gc.churn.Eden_Space.norm:     2695572.778 B/op
                 ·gc.churn.Survivor_Space:      0.005 MB/sec
                 ·gc.churn.Survivor_Space.norm: 11.270 B/op
                 ·gc.count:                     546.000 counts
                 ·gc.time:                      116.000 ms
                 ·stack:                        <delayed till summary>



Result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteCustomJsonLayout":
  464.774 ±(99.9%) 22.475 ops/s [Average]
  (min, avg, max) = (456.097, 464.774, 476.307), stdev = 8.015
  CI (99.9%): [442.298, 487.249] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteCustomJsonLayout:·gc.alloc.rate":
  1166.106 ±(99.9%) 68.912 MB/sec [Average]
  (min, avg, max) = (1140.781, 1166.106, 1201.996), stdev = 24.575
  CI (99.9%): [1097.194, 1235.018] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteCustomJsonLayout:·gc.alloc.rate.norm":
  2674738.496 ±(99.9%) 49046.088 B/op [Average]
  (min, avg, max) = (2658746.205, 2674738.496, 2690800.566), stdev = 17490.308
  CI (99.9%): [2625692.407, 2723784.584] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteCustomJsonLayout:·gc.churn.Eden_Space":
  1168.286 ±(99.9%) 68.903 MB/sec [Average]
  (min, avg, max) = (1143.101, 1168.286, 1204.257), stdev = 24.572
  CI (99.9%): [1099.383, 1237.190] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteCustomJsonLayout:·gc.churn.Eden_Space.norm":
  2679744.800 ±(99.9%) 50850.527 B/op [Average]
  (min, avg, max) = (2662345.363, 2679744.800, 2697552.982), stdev = 18133.788
  CI (99.9%): [2628894.273, 2730595.327] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteCustomJsonLayout:·gc.churn.Survivor_Space":
  0.004 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.002, 0.006] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteCustomJsonLayout:·gc.churn.Survivor_Space.norm":
  8.569 ±(99.9%) 4.796 B/op [Average]
  (min, avg, max) = (6.991, 8.569, 11.270), stdev = 1.710
  CI (99.9%): [3.773, 13.365] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteCustomJsonLayout:·gc.count":
  3207.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (523.000, 534.500, 551.000), stdev = 11.256
  CI (99.9%): [3207.000, 3207.000] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteCustomJsonLayout:·gc.time":
  680.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (111.000, 113.333, 117.000), stdev = 2.733
  CI (99.9%): [680.000, 680.000] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteCustomJsonLayout:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
 50.0%         TIMED_WAITING
 49.0%         RUNNABLE
  1.0%         WAITING

....[Thread state: TIMED_WAITING]...................................................................
 50.0% 100.0% java.lang.Object.wait

....[Thread state: RUNNABLE]........................................................................
 10.5%  21.3% jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  7.0%  14.2% com.fasterxml.jackson.databind.ser.std.StringSerializer.serialize
  5.6%  11.3% com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField
  5.0%  10.1% org.apache.logging.log4j.core.layout.JsonLayout.toSerializable
  4.3%   8.7% com.fasterxml.jackson.databind.ObjectWriter.writeValue
  3.6%   7.3% com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName
  3.1%   6.4% com.fasterxml.jackson.core.json.JsonWriteContext.createChildObjectContext
  2.0%   4.0% java.util.HashMap.putVal
  1.5%   3.0% java.util.HashMap.getNode
  1.3%   2.6% com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.benchmark
  5.4%  10.9% <other>

....[Thread state: WAITING].........................................................................
  1.0% 100.0% jdk.internal.misc.Unsafe.park



# JMH version: 1.21
# VM version: JDK 12, OpenJDK 64-Bit Server VM, 12+33
# VM invoker: /home/vy/Software/share/java/jdk/12+33/bin/java
# VM options: -XX:+TieredCompilation -XX:+AggressiveOpts -Dclassworlds.conf=/home/vy/Software/share/java/maven/latest/bin/m2.conf -Dmaven.home=/home/vy/Software/share/java/maven/latest -Dlibrary.jansi.path=/home/vy/Software/share/java/maven/latest/lib/jansi-native -Dmaven.multiModuleProjectDirectory=/home/vy/Projects/log4j2-logstash-layout
# Warmup: 3 iterations, 20 s each
# Measurement: 3 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteDefaultJsonLayout

# Run progress: 66.67% complete, ETA 00:10:19
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Ignoring option AggressiveOpts; support was removed in 12.0
# Warmup Iteration   1: 481.973 ops/s
# Warmup Iteration   2: 514.806 ops/s
# Warmup Iteration   3: 496.186 ops/s
Iteration   1: 491.196 ops/s
                 ·gc.alloc.rate:                1098.569 MB/sec
                 ·gc.alloc.rate.norm:           2384298.989 B/op
                 ·gc.churn.Eden_Space:          1099.540 MB/sec
                 ·gc.churn.Eden_Space.norm:     2386405.603 B/op
                 ·gc.churn.Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Survivor_Space.norm: 4.488 B/op
                 ·gc.count:                     503.000 counts
                 ·gc.time:                      105.000 ms
                 ·stack:                        <delayed till summary>

Iteration   2: 514.516 ops/s
                 ·gc.alloc.rate:                1150.541 MB/sec
                 ·gc.alloc.rate.norm:           2384164.459 B/op
                 ·gc.churn.Eden_Space:          1153.902 MB/sec
                 ·gc.churn.Eden_Space.norm:     2391128.004 B/op
                 ·gc.churn.Survivor_Space:      0.003 MB/sec
                 ·gc.churn.Survivor_Space.norm: 5.959 B/op
                 ·gc.count:                     528.000 counts
                 ·gc.time:                      109.000 ms
                 ·stack:                        <delayed till summary>

Iteration   3: 520.839 ops/s
                 ·gc.alloc.rate:                1164.765 MB/sec
                 ·gc.alloc.rate.norm:           2384114.633 B/op
                 ·gc.churn.Eden_Space:          1165.068 MB/sec
                 ·gc.churn.Eden_Space.norm:     2384736.172 B/op
                 ·gc.churn.Survivor_Space:      0.003 MB/sec
                 ·gc.churn.Survivor_Space.norm: 6.116 B/op
                 ·gc.count:                     533.000 counts
                 ·gc.time:                      110.000 ms
                 ·stack:                        <delayed till summary>


# Run progress: 75.00% complete, ETA 00:07:44
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Ignoring option AggressiveOpts; support was removed in 12.0
# Warmup Iteration   1: 508.649 ops/s
# Warmup Iteration   2: 539.578 ops/s
# Warmup Iteration   3: 522.106 ops/s
Iteration   1: 526.915 ops/s
                 ·gc.alloc.rate:                1178.349 MB/sec
                 ·gc.alloc.rate.norm:           2384079.738 B/op
                 ·gc.churn.Eden_Space:          1180.333 MB/sec
                 ·gc.churn.Eden_Space.norm:     2388093.210 B/op
                 ·gc.churn.Survivor_Space:      0.003 MB/sec
                 ·gc.churn.Survivor_Space.norm: 5.710 B/op
                 ·gc.count:                     540.000 counts
                 ·gc.time:                      110.000 ms
                 ·stack:                        <delayed till summary>

Iteration   2: 522.537 ops/s
                 ·gc.alloc.rate:                1168.566 MB/sec
                 ·gc.alloc.rate.norm:           2384126.891 B/op
                 ·gc.churn.Eden_Space:          1169.509 MB/sec
                 ·gc.churn.Eden_Space.norm:     2386051.108 B/op
                 ·gc.churn.Survivor_Space:      0.003 MB/sec
                 ·gc.churn.Survivor_Space.norm: 5.279 B/op
                 ·gc.count:                     535.000 counts
                 ·gc.time:                      113.000 ms
                 ·stack:                        <delayed till summary>

Iteration   3: 517.756 ops/s
                 ·gc.alloc.rate:                1157.885 MB/sec
                 ·gc.alloc.rate.norm:           2384153.009 B/op
                 ·gc.churn.Eden_Space:          1160.655 MB/sec
                 ·gc.churn.Eden_Space.norm:     2389855.730 B/op
                 ·gc.churn.Survivor_Space:      0.003 MB/sec
                 ·gc.churn.Survivor_Space.norm: 6.313 B/op
                 ·gc.count:                     531.000 counts
                 ·gc.time:                      110.000 ms
                 ·stack:                        <delayed till summary>



Result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteDefaultJsonLayout":
  515.626 ±(99.9%) 35.580 ops/s [Average]
  (min, avg, max) = (491.196, 515.626, 526.915), stdev = 12.688
  CI (99.9%): [480.046, 551.207] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteDefaultJsonLayout:·gc.alloc.rate":
  1153.113 ±(99.9%) 79.471 MB/sec [Average]
  (min, avg, max) = (1098.569, 1153.113, 1178.349), stdev = 28.340
  CI (99.9%): [1073.641, 1232.584] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteDefaultJsonLayout:·gc.alloc.rate.norm":
  2384156.286 ±(99.9%) 213.193 B/op [Average]
  (min, avg, max) = (2384079.738, 2384156.286, 2384298.989), stdev = 76.027
  CI (99.9%): [2383943.093, 2384369.480] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteDefaultJsonLayout:·gc.churn.Eden_Space":
  1154.835 ±(99.9%) 79.932 MB/sec [Average]
  (min, avg, max) = (1099.540, 1154.835, 1180.333), stdev = 28.504
  CI (99.9%): [1074.903, 1234.766] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteDefaultJsonLayout:·gc.churn.Eden_Space.norm":
  2387711.638 ±(99.9%) 6837.935 B/op [Average]
  (min, avg, max) = (2384736.172, 2387711.638, 2391128.004), stdev = 2438.474
  CI (99.9%): [2380873.703, 2394549.573] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteDefaultJsonLayout:·gc.churn.Survivor_Space":
  0.003 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.002, 0.004] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteDefaultJsonLayout:·gc.churn.Survivor_Space.norm":
  5.644 ±(99.9%) 1.878 B/op [Average]
  (min, avg, max) = (4.488, 5.644, 6.313), stdev = 0.670
  CI (99.9%): [3.766, 7.523] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteDefaultJsonLayout:·gc.count":
  3170.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (503.000, 528.333, 540.000), stdev = 13.049
  CI (99.9%): [3170.000, 3170.000] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteDefaultJsonLayout:·gc.time":
  657.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (105.000, 109.500, 113.000), stdev = 2.588
  CI (99.9%): [657.000, 657.000] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteDefaultJsonLayout:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
 50.0%         TIMED_WAITING
 49.0%         RUNNABLE
  1.0%         WAITING

....[Thread state: TIMED_WAITING]...................................................................
 50.0% 100.0% java.lang.Object.wait

....[Thread state: RUNNABLE]........................................................................
  9.4%  19.1% com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField
  8.6%  17.6% jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  4.3%   8.7% org.apache.logging.log4j.core.util.StringBuilderWriter.write
  4.2%   8.6% com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName
  4.2%   8.6% com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.close
  2.9%   5.9% com.fasterxml.jackson.databind.ser.std.StringSerializer.serialize
  2.2%   4.4% com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFieldsFiltered
  1.6%   3.2% com.fasterxml.jackson.core.json.JsonWriteContext.createChildObjectContext
  1.4%   2.9% java.util.HashMap.getNode
  1.3%   2.6% org.apache.logging.log4j.core.jackson.MessageSerializer.serialize
  9.0%  18.4% <other>

....[Thread state: WAITING].........................................................................
  1.0% 100.0% jdk.internal.misc.Unsafe.park



# JMH version: 1.21
# VM version: JDK 12, OpenJDK 64-Bit Server VM, 12+33
# VM invoker: /home/vy/Software/share/java/jdk/12+33/bin/java
# VM options: -XX:+TieredCompilation -XX:+AggressiveOpts -Dclassworlds.conf=/home/vy/Software/share/java/maven/latest/bin/m2.conf -Dmaven.home=/home/vy/Software/share/java/maven/latest -Dlibrary.jansi.path=/home/vy/Software/share/java/maven/latest/lib/jansi-native -Dmaven.multiModuleProjectDirectory=/home/vy/Projects/log4j2-logstash-layout
# Warmup: 3 iterations, 20 s each
# Measurement: 3 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteLogstashLayout

# Run progress: 83.33% complete, ETA 00:05:09
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Ignoring option AggressiveOpts; support was removed in 12.0
# Warmup Iteration   1: 740.448 ops/s
# Warmup Iteration   2: 785.170 ops/s
# Warmup Iteration   3: 713.651 ops/s
Iteration   1: 781.184 ops/s
                 ·gc.alloc.rate:            1.507 MB/sec
                 ·gc.alloc.rate.norm:       2056.793 B/op
                 ·gc.churn.Eden_Space:      2.186 MB/sec
                 ·gc.churn.Eden_Space.norm: 2982.848 B/op
                 ·gc.count:                 1.000 counts
                 ·gc.time:                  1.000 ms
                 ·stack:                    <delayed till summary>

Iteration   2: 774.009 ops/s
                 ·gc.alloc.rate:      1.507 MB/sec
                 ·gc.alloc.rate.norm: 2076.364 B/op
                 ·gc.count:           ≈ 0 counts
                 ·stack:              <delayed till summary>

Iteration   3: 777.889 ops/s
                 ·gc.alloc.rate:            1.495 MB/sec
                 ·gc.alloc.rate.norm:       2048.493 B/op
                 ·gc.churn.Eden_Space:      2.186 MB/sec
                 ·gc.churn.Eden_Space.norm: 2995.755 B/op
                 ·gc.count:                 1.000 counts
                 ·gc.time:                  1.000 ms
                 ·stack:                    <delayed till summary>


# Run progress: 91.67% complete, ETA 00:02:34
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Ignoring option AggressiveOpts; support was removed in 12.0
# Warmup Iteration   1: 768.306 ops/s
# Warmup Iteration   2: 788.905 ops/s
# Warmup Iteration   3: 773.750 ops/s
Iteration   1: 793.597 ops/s
                 ·gc.alloc.rate:            1.495 MB/sec
                 ·gc.alloc.rate.norm:       2008.509 B/op
                 ·gc.churn.Eden_Space:      2.186 MB/sec
                 ·gc.churn.Eden_Space.norm: 2936.748 B/op
                 ·gc.count:                 1.000 counts
                 ·gc.time:                  1.000 ms
                 ·stack:                    <delayed till summary>

Iteration   2: 774.207 ops/s
                 ·gc.alloc.rate:      1.491 MB/sec
                 ·gc.alloc.rate.norm: 2053.290 B/op
                 ·gc.count:           ≈ 0 counts
                 ·stack:              <delayed till summary>

Iteration   3: 766.661 ops/s
                 ·gc.alloc.rate:            1.486 MB/sec
                 ·gc.alloc.rate.norm:       2066.257 B/op
                 ·gc.churn.Eden_Space:      2.186 MB/sec
                 ·gc.churn.Eden_Space.norm: 3039.508 B/op
                 ·gc.count:                 1.000 counts
                 ·gc.time:                  1.000 ms
                 ·stack:                    <delayed till summary>



Result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteLogstashLayout":
  777.925 ±(99.9%) 25.463 ops/s [Average]
  (min, avg, max) = (766.661, 777.925, 793.597), stdev = 9.080
  CI (99.9%): [752.462, 803.388] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteLogstashLayout:·gc.alloc.rate":
  1.497 ±(99.9%) 0.024 MB/sec [Average]
  (min, avg, max) = (1.486, 1.497, 1.507), stdev = 0.009
  CI (99.9%): [1.473, 1.521] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteLogstashLayout:·gc.alloc.rate.norm":
  2051.618 ±(99.9%) 65.457 B/op [Average]
  (min, avg, max) = (2008.509, 2051.618, 2076.364), stdev = 23.343
  CI (99.9%): [1986.160, 2117.075] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteLogstashLayout:·gc.churn.Eden_Space":
  1.457 ±(99.9%) 3.165 MB/sec [Average]
  (min, avg, max) = (≈ 0, 1.457, 2.186), stdev = 1.129
  CI (99.9%): [≈ 0, 4.623] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteLogstashLayout:·gc.churn.Eden_Space.norm":
  1992.477 ±(99.9%) 4328.860 B/op [Average]
  (min, avg, max) = (≈ 0, 1992.477, 3039.508), stdev = 1543.713
  CI (99.9%): [≈ 0, 6321.337] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteLogstashLayout:·gc.count":
  4.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.667, 1.000), stdev = 0.516
  CI (99.9%): [4.000, 4.000] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteLogstashLayout:·gc.time":
  4.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.667, 1.000), stdev = 0.516
  CI (99.9%): [4.000, 4.000] (assumes normal distribution)

Secondary result "com.vlkan.log4j2.logstash.layout.LogstashLayoutBenchmark.liteLogstashLayout:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
 50.0%         TIMED_WAITING
 49.1%         RUNNABLE
  0.9%         WAITING

....[Thread state: TIMED_WAITING]...................................................................
 50.0% 100.0% java.lang.Object.wait

....[Thread state: RUNNABLE]........................................................................
 11.5%  23.4% com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeString
  9.1%  18.5% com.vlkan.log4j2.logstash.layout.resolver.TemplateResolvers$6.resolve
  6.8%  13.9% com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeNumber
  6.2%  12.6% com.vlkan.log4j2.logstash.layout.resolver.ThreadResolver.resolve
  6.0%  12.3% com.vlkan.log4j2.logstash.layout.resolver.ThreadResolver$1.resolve
  3.2%   6.5% com.vlkan.log4j2.logstash.layout.resolver.ExceptionResolver.resolve
  2.0%   4.1% com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeBoolean
  1.9%   3.8% com.vlkan.log4j2.logstash.layout.LogstashLayout.encode
  1.3%   2.6% com.vlkan.log4j2.logstash.layout.resolver.LoggerResolver.access$000
  0.9%   1.7% com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject
  0.2%   0.5% <other>

....[Thread state: WAITING].........................................................................
  0.9% 100.0% jdk.internal.misc.Unsafe.park



# Run complete. Total time: 00:30:57

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                     Mode  Cnt         Score        Error   Units
LogstashLayoutBenchmark.fullCustomJsonLayout                                 thrpt    6        12.398 ±      1.012   ops/s
LogstashLayoutBenchmark.fullCustomJsonLayout:·gc.alloc.rate                  thrpt    6      1138.559 ±     92.818  MB/sec
LogstashLayoutBenchmark.fullCustomJsonLayout:·gc.alloc.rate.norm             thrpt    6  97899419.280 ±  13288.101    B/op
LogstashLayoutBenchmark.fullCustomJsonLayout:·gc.churn.Eden_Space            thrpt    6      1149.453 ±     92.953  MB/sec
LogstashLayoutBenchmark.fullCustomJsonLayout:·gc.churn.Eden_Space.norm       thrpt    6  98836794.041 ± 191519.611    B/op
LogstashLayoutBenchmark.fullCustomJsonLayout:·gc.churn.Survivor_Space        thrpt    6         0.083 ±      0.010  MB/sec
LogstashLayoutBenchmark.fullCustomJsonLayout:·gc.churn.Survivor_Space.norm   thrpt    6      7170.654 ±    380.011    B/op
LogstashLayoutBenchmark.fullCustomJsonLayout:·gc.count                       thrpt    6      3159.000               counts
LogstashLayoutBenchmark.fullCustomJsonLayout:·gc.time                        thrpt    6       859.000                   ms
LogstashLayoutBenchmark.fullCustomJsonLayout:·stack                          thrpt                NaN                  ---
LogstashLayoutBenchmark.fullDefaultJsonLayout                                thrpt    6        13.315 ±      1.103   ops/s
LogstashLayoutBenchmark.fullDefaultJsonLayout:·gc.alloc.rate                 thrpt    6      1221.207 ±    101.010  MB/sec
LogstashLayoutBenchmark.fullDefaultJsonLayout:·gc.alloc.rate.norm            thrpt    6  97778242.029 ±  11104.215    B/op
LogstashLayoutBenchmark.fullDefaultJsonLayout:·gc.churn.Eden_Space           thrpt    6      1233.458 ±    101.562  MB/sec
LogstashLayoutBenchmark.fullDefaultJsonLayout:·gc.churn.Eden_Space.norm      thrpt    6  98759482.105 ± 245988.129    B/op
LogstashLayoutBenchmark.fullDefaultJsonLayout:·gc.churn.Survivor_Space       thrpt    6         0.076 ±      0.006  MB/sec
LogstashLayoutBenchmark.fullDefaultJsonLayout:·gc.churn.Survivor_Space.norm  thrpt    6      6117.099 ±    678.902    B/op
LogstashLayoutBenchmark.fullDefaultJsonLayout:·gc.count                      thrpt    6      3391.000               counts
LogstashLayoutBenchmark.fullDefaultJsonLayout:·gc.time                       thrpt    6       879.000                   ms
LogstashLayoutBenchmark.fullDefaultJsonLayout:·stack                         thrpt                NaN                  ---
LogstashLayoutBenchmark.fullLogstashLayout                                   thrpt    6        60.582 ±      2.136   ops/s
LogstashLayoutBenchmark.fullLogstashLayout:·gc.alloc.rate                    thrpt    6         7.565 ±      0.205  MB/sec
LogstashLayoutBenchmark.fullLogstashLayout:·gc.alloc.rate.norm               thrpt    6    133127.335 ±   1085.511    B/op
LogstashLayoutBenchmark.fullLogstashLayout:·gc.churn.Eden_Space              thrpt    6         7.284 ±      3.163  MB/sec
LogstashLayoutBenchmark.fullLogstashLayout:·gc.churn.Eden_Space.norm         thrpt    6    128126.300 ±  54234.477    B/op
LogstashLayoutBenchmark.fullLogstashLayout:·gc.churn.Survivor_Space          thrpt    6         0.026 ±      0.111  MB/sec
LogstashLayoutBenchmark.fullLogstashLayout:·gc.churn.Survivor_Space.norm     thrpt    6       448.232 ±   1946.601    B/op
LogstashLayoutBenchmark.fullLogstashLayout:·gc.count                         thrpt    6        20.000               counts
LogstashLayoutBenchmark.fullLogstashLayout:·gc.time                          thrpt    6        44.000                   ms
LogstashLayoutBenchmark.fullLogstashLayout:·stack                            thrpt                NaN                  ---
LogstashLayoutBenchmark.liteCustomJsonLayout                                 thrpt    6       464.774 ±     22.475   ops/s
LogstashLayoutBenchmark.liteCustomJsonLayout:·gc.alloc.rate                  thrpt    6      1166.106 ±     68.912  MB/sec
LogstashLayoutBenchmark.liteCustomJsonLayout:·gc.alloc.rate.norm             thrpt    6   2674738.496 ±  49046.088    B/op
LogstashLayoutBenchmark.liteCustomJsonLayout:·gc.churn.Eden_Space            thrpt    6      1168.286 ±     68.903  MB/sec
LogstashLayoutBenchmark.liteCustomJsonLayout:·gc.churn.Eden_Space.norm       thrpt    6   2679744.800 ±  50850.527    B/op
LogstashLayoutBenchmark.liteCustomJsonLayout:·gc.churn.Survivor_Space        thrpt    6         0.004 ±      0.002  MB/sec
LogstashLayoutBenchmark.liteCustomJsonLayout:·gc.churn.Survivor_Space.norm   thrpt    6         8.569 ±      4.796    B/op
LogstashLayoutBenchmark.liteCustomJsonLayout:·gc.count                       thrpt    6      3207.000               counts
LogstashLayoutBenchmark.liteCustomJsonLayout:·gc.time                        thrpt    6       680.000                   ms
LogstashLayoutBenchmark.liteCustomJsonLayout:·stack                          thrpt                NaN                  ---
LogstashLayoutBenchmark.liteDefaultJsonLayout                                thrpt    6       515.626 ±     35.580   ops/s
LogstashLayoutBenchmark.liteDefaultJsonLayout:·gc.alloc.rate                 thrpt    6      1153.113 ±     79.471  MB/sec
LogstashLayoutBenchmark.liteDefaultJsonLayout:·gc.alloc.rate.norm            thrpt    6   2384156.286 ±    213.193    B/op
LogstashLayoutBenchmark.liteDefaultJsonLayout:·gc.churn.Eden_Space           thrpt    6      1154.835 ±     79.932  MB/sec
LogstashLayoutBenchmark.liteDefaultJsonLayout:·gc.churn.Eden_Space.norm      thrpt    6   2387711.638 ±   6837.935    B/op
LogstashLayoutBenchmark.liteDefaultJsonLayout:·gc.churn.Survivor_Space       thrpt    6         0.003 ±      0.001  MB/sec
LogstashLayoutBenchmark.liteDefaultJsonLayout:·gc.churn.Survivor_Space.norm  thrpt    6         5.644 ±      1.878    B/op
LogstashLayoutBenchmark.liteDefaultJsonLayout:·gc.count                      thrpt    6      3170.000               counts
LogstashLayoutBenchmark.liteDefaultJsonLayout:·gc.time                       thrpt    6       657.000                   ms
LogstashLayoutBenchmark.liteDefaultJsonLayout:·stack                         thrpt                NaN                  ---
LogstashLayoutBenchmark.liteLogstashLayout                                   thrpt    6       777.925 ±     25.463   ops/s
LogstashLayoutBenchmark.liteLogstashLayout:·gc.alloc.rate                    thrpt    6         1.497 ±      0.024  MB/sec
LogstashLayoutBenchmark.liteLogstashLayout:·gc.alloc.rate.norm               thrpt    6      2051.618 ±     65.457    B/op
LogstashLayoutBenchmark.liteLogstashLayout:·gc.churn.Eden_Space              thrpt    6         1.457 ±      3.165  MB/sec
LogstashLayoutBenchmark.liteLogstashLayout:·gc.churn.Eden_Space.norm         thrpt    6      1992.477 ±   4328.860    B/op
LogstashLayoutBenchmark.liteLogstashLayout:·gc.count                         thrpt    6         4.000               counts
LogstashLayoutBenchmark.liteLogstashLayout:·gc.time                          thrpt    6         4.000                   ms
LogstashLayoutBenchmark.liteLogstashLayout:·stack                            thrpt                NaN                  ---

Benchmark result is saved to /home/vy/Projects/log4j2-logstash-layout/layout-benchmark/results.json
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  30:59 min
[INFO] Finished at: 2019-04-25T10:26:34+02:00
[INFO] ------------------------------------------------------------------------
